---
name: Build, Test, and Publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [ published ]

permissions:
  contents: read
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    # Skip job if actor is github-actions[bot] to ensure agent safety
    if: ${{ github.actor != 'github-actions[bot]' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]; then pip install -e ".[dev]"; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 \
            --statistics --ignore=F401

      - name: Test with pytest
        run: |
          pytest --junitxml=junit/test-results.xml --cov=mojentic \
            --cov-report=xml --cov-report=html

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: junit/test-results.xml

      - name: Build MkDocs site
        run: |
          mkdocs build

      - name: Upload documentation site
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: site/
          retention-days: 1

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Only run on push to main, not on pull requests or releases
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download documentation site
        uses: actions/download-artifact@v4
        with:
          name: documentation-site
          path: site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release-build:
    runs-on: ubuntu-latest
    # Only run on release publish events
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    # Only run on release publish events
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
